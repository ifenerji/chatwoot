version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    tty: true
    stdin_open: true
    image: chatwoot:tkl
    env_file: .env
    restart: unless-stopped
    volumes:
      - /docker/chatwoot-data/storage:/app/storage
    logging:
      options:
        max-size: "1024m"
        max-file: "5"

  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - /docker/chatwoot-data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=chatwoot
      # Please provide your own password.
      - POSTGRES_PASSWORD=xVbTbbIykmYDQQa
    logging:
      options:
        max-size: "1024m"
        max-file: "5"


  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - /docker/chatwoot-data/redis:/data
    ports:
      - '6379:6379'
    logging:
      options:
        max-size: "1024m"
        max-file: "5"


  nginx:
    image: nginx:stable-alpine
    volumes:
      - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /docker/nginx/logs:/etc/nginx/logs
      - /docker/nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    logging:
      options:
        max-size: "1024m"
        max-file: "5"
